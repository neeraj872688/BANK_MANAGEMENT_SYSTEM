project name ===========BANK MANAGEMENT SYSTEM===========================



file name===main.py


from register import *
from bank import *
print("Welcome to Bank Management System")
status=False
while True:
    try:
        register=int(input("1. sign up\n"
                           "2. sign in"))
        if register==1 or register==2:
            if register==1:
                SignUp()
            if register==2:
                user=SignIn()
                status=True
                break
        else:
            print("Please Enter Valid Input from Options")
    except ValueError:
        print("Invalid Input Try Again with Number")
account_number=db_query(f"SELECT account_number FROM customers where username='{user}';")

while status:
    print(f"Welcome {user.capitalize()} Choose Your Banking Service\n")
    try:
        facility=int(input("1. balance Enquiry\n"
                           "2. Cash Deposit\n"
                           "3. Cash Withral\n"
                           "4. fund transfer\n"))
        if facility>=1 and facility<=4:
            if facility==1:
                bobj = Bank(user, account_number[0][0])
                bobj.balanceenquiry()
            elif facility==2:
                while True:
                    try:
                        amount = int(input("Enter amount to deposit"))
                        bobj = Bank(user, account_number[0][0])
                        bobj.deposit(amount)
                        mydb.commit()
                        break
                    except ValueError:
                        print("Enter Valid Input ie Number")
                        continue
            elif facility==3:
                while True:
                    try:
                        amount=int(input("Enter amount to withdraw"))
                        bobj = Bank(user, account_number[0][0])
                        bobj.withdraw(amount)
                        mydb.commit()
                        break
                    except ValueError:
                        print("Enter Valid Input ie Number")
                        continue
            elif facility==4:
                while True:
                    try:
                        receive=int(input("Enter Receiver Account Number"))
                        amount=int(input("Enter Money to Transfer"))
                        bobj = Bank(user, account_number[0][0])
                        bobj.fundtransfer(receive,amount)
                        mydb.commit()
                        break
                    except ValueError:
                        print("Enter Valid Input ie Number")
                        continue

        else:
            print("Please Enter Valid Input from Options")
            continue
    except ValueError:
        print("Invalid Input Try Again with Number")
        continue




file name===bank.py



#bank servicess
from database import *
import datetime
class Bank:
    def __init__(self,username,account_number):
        self.__username=username
        self.__account_number=account_number

    def create_transaction_table(self):
        db_query(f"CREATE TABLE IF NOT EXISTS {self.__username}_transaction"
                 f"(timedate VARCHAR(30),"
                 f"account_number INTEGER,"
                 f"remarks VARCHAR(30),"
                 f"amount INTEGER)")
    def balanceenquiry(self):
        temp=db_query(f"SELECT balance FROM customers where username='{self.__username}'")
        print(f"{self.__username} Balance is {temp[0][0]}")

    def deposit(self,amount):
        temp=db_query(f"SELECT balance FROM customers where username='{self.__username}'")
        test=amount+temp[0][0]
        db_query(f"UPDATE customers SET balance='{test}' where username='{self.__username}';")
        self.balanceenquiry()
        db_query(f"INSERT INTO {self.__username}_transaction VALUES("
                 f"'{datetime.datetime.now()}',"
                 f"'{self.__account_number}',"
                 f"'Amount Deposit',"
                 f"'{amount}'"
                 f")")
        print(f"{self.__username} Amount is Successfully Depositted into Your Account {self.__account_number}")

    def withdraw(self,amount):
        temp=db_query(f"SELECT balance FROM customers where username='{self.__username}';")
        if amount>temp[0][0]:
            print("Insufficient Balance Please Deposit Money")
        else:
            test=temp[0][0]-amount
            db_query(f"UPDATE customers SET balance='{test}' where username='{self.__username}';")
            self.balanceenquiry()
            db_query(f"INSERT INTO {self.__username}_transaction VALUES("
                    f"'{datetime.datetime.now()}',"
                    f"'{self.__account_number}',"
                    f"'Amount Withdraw',"
                    f"'{amount}'"
                    f")")
        print(f"{self.__username} Amount is Successfully Withdraw from Your Account {self.__account_number}")

    def fundtransfer(self, receive,amount):
        temp = db_query(f"SELECT balance FROM customers where username='{self.__username}';")
        if amount > temp[0][0]:
            print("Insufficient Balance Please Deposit Money")
        else:
            temp2 = db_query(f"SELECT balance FROM customers where account_number='{receive}';")
            test1=temp[0][0]-amount
            test2=amount+temp[0][0]
            db_query(f"UPDATE customers SET balance='{test1}' where username='{self.__username}';")
            db_query(f"UPDATE customers SET balance='{test2}' where account_number='{receive}';")
            self.balanceenquiry()
            db_query(f"INSERT INTO {self.__username}_transaction VALUES("
                     f"'{datetime.datetime.now()}',"
                     f"'{self.__account_number}',"
                     f"'Fund Transfer-> {receive}',"
                     f"'{amount}'"
                     f")")
        print(f"{self.__username} Amount is Successfully Transaction from Your Account {self.__account_number}")







file name====customer.py



#customer detail
from database import *
class Customer:
    def __init__(self,username,password,name,age,city,account_number):
        self.__username=username
        self.__password=password
        self.__name=name
        self.__age=age
        self.__city=city
        self.__account_number=account_number
    def createuser(self):
        db_query(f"INSERT INTO customers VALUES ('{self.__username}','{self.__password}','{self.__name}','{self.__age}','{self.__city}',0,'{self.__account_number}', 1 );")
        mydb.commit()



file name===database.py



#database management banking
import mysql.connector as sql
mydb=sql.connect(
    host="localhost",
    user="root",
    passwd="suraj@4Mysql",
    database="BANK_MANAGEMENT_SYSTEM"
)
cursor=mydb.cursor()

def db_query(str):
    cursor.execute(str)
    result=cursor.fetchall()
    return result
def  createcustomertable():
    cursor.execute('''
                CREATE TABLE IF NOT EXISTS customers
                (username VARCHAR(20),
                password VARCHAR(20),
                name varchar(20),
                age INTEGER,
                city VARCHAR(20),
                balance integer not null,
                account_number integer not null,
                status BOOLEAN)

    ''')
mydb.commit()
if __name__ == "__main__":
    createcustomertable()


file name====register.py



#user reigistration sign in sign up
from database import *
from customer import *
from bank import Bank
import random
def SignUp():
    username=input("Create Username: ")
    temp=db_query(f"SELECT username FROM customers where username = '{username}';")
    if temp:
        print("Username Already Exists")
    else:
        print("User is Available Please proceed")
        password=input("Enter Your Password: ")
        name=input("Enter Your Name: ")
        age=input("Enter Your Age: ")
        city=input("Enter Your city: ")
        while True:
            account_number=random.randint(10000000,99999999)
            temp=db_query(f"SELECT account_number from customers where account_number=' {account_number}';")
            if temp:
                continue
            else:
                print("Your Account Number",account_number)
                break
    cobj=Customer(username,password,name,age,city,account_number)
    cobj.createuser()
    bobj=Bank(username,account_number)
    bobj.create_transaction_table()
def SignIn():
    username=input("Enter username :")
    temp=db_query(f"SELECT username FROM customers where username='{username}';")
    if temp:
        while True:
            password=input(f"welcome {username.capitalize()} Enter Password: ")
            temp=db_query(f"SELECT password FROM customers where username='{username}';")
            #print(temp[0][0])
            if temp[0][0]==password:
                print("Sign IN successfully")
                return username
            else:
                print("wron Password try again")
                continue
    else:
        print("Enter correct username")
        SignIn()


file name====temp.py



import random
print(random.randint(10000000,99999999))